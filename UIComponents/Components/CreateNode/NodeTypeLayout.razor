<head>
    <link rel="stylesheet" href="/_content/Components/CSS/CreateNode/NodeTypeLayout.css"/>
</head>

<div class="nodeTypeContainer" onmousedown="Clickme(this)" id="@nodeType.Id" >
    
    <div class="manage-container">
        @if (!nodeType.isRoot)
        {
            <svg @onclick="showLinkToParent" class="manage-icons" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <rect x="16" y="9" width="4" height="4" rx="2" transform="rotate(90 16 9)" fill="#222222" stroke="#222222" stroke-width="2"></rect> <rect x="20" y="17" width="4" height="4" rx="2" transform="rotate(90 20 17)" fill="#222222" stroke="#222222" stroke-width="2"></rect> <path d="M5 4V15C5 16.8856 5 17.8284 5.58579 18.4142C6.17157 19 7.11438 19 9 19H16" stroke="#222222" stroke-width="2"></path> <path d="M5 7V7C5 8.88562 5 9.82843 5.58579 10.4142C6.17157 11 7.11438 11 9 11H12" stroke="#222222" stroke-width="2"></path> </g></svg>

        }
        <svg @onclick="showAddPerson" class="manage-icons" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M17 10H20M23 10H20M20 10V7M20 10V13" stroke="#000000" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M1 20V19C1 15.134 4.13401 12 8 12V12C11.866 12 15 15.134 15 19V20" stroke="#000000" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M8 12C10.2091 12 12 10.2091 12 8C12 5.79086 10.2091 4 8 4C5.79086 4 4 5.79086 4 8C4 10.2091 5.79086 12 8 12Z" stroke="#000000" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path> </g></svg>
    </div>
    
    <div class="nodeTypeAttributes">
         <label>@nodeType.Name</label>
         <label>@nodeType.Code</label>
    </div>
    
    
    @if (isAddPersonVisible)
    {
        <AddNodeRoleToNode submitNewRole="addNodeRoleToNode" closeAddNodeRoleToNode="() => isAddPersonVisible=false"></AddNodeRoleToNode>
    }
    @if (isAddNodeTypeParent)
    {
        <LinkNodeTypeParent closeLinkNodeParent="() => isAddNodeTypeParent=false" availableNodes="availableNodes" nodeTypeId="nodeType.Id" linkNodeType="linkNodeToParent"></LinkNodeTypeParent>
    }
    
</div>

<script src="/_content/Components/JS/DragAndDrop.js"></script>

